mutate(
tractparks_inzip = parks_per_area * ZAREA * ZAREAPCT/100,
tractparkarea_inzip = prop_park_area_tract * ZAREA * ZAREAPCT/100,
tractpop_inzip = pop_per_area * ZAREA * ZAREAPCT/100
) %>%
group_by(ZipCode) %>%
summarize(
parks_inzip = sum(tractparks_inzip, na.rm = T),
parkarea_inzip = sum(tractparkarea_inzip, na.rm = T),
pop_inzip = sum(tractpop_inzip, na.rm = T),
ZAREA = ZAREA
) %>%
mutate(
prop_parkarea_inzip = parkarea_inzip / ZAREA,
pop_density_inzip = pop_inzip / ZAREA
) %>%
unique()
# Chunk 8: NationQuartile
parks_NQs <- quantile(zip_data$parks_inzip)
parkarea_NQs <- quantile(zip_data$parkarea_inzip)
prop_parkarea_NQs <- quantile(zip_data$prop_parkarea_inzip)
pop_density_NQs <- quantile(zip_data$pop_density_inzip)
zip_data <- zip_data %>%
mutate(
parks_NQ = case_when(
parks_inzip > parks_NQs[4] ~ 4,
parks_inzip > parks_NQs[3] ~ 3,
parks_inzip > parks_NQs[2] ~ 2,
parks_inzip >= parks_NQs[1] ~ 1
),
parkarea_NQ = case_when(
parkarea_inzip > parkarea_NQs[4] ~ 4,
parkarea_inzip > parkarea_NQs[3] ~ 3,
parkarea_inzip > parkarea_NQs[2] ~ 2,
parkarea_inzip >= parkarea_NQs[1] ~ 1
),
prop_parkarea_NQ = case_when(
prop_parkarea_inzip > prop_parkarea_NQs[4] ~ 4,
prop_parkarea_inzip > prop_parkarea_NQs[3] ~ 3,
prop_parkarea_inzip > prop_parkarea_NQs[2] ~ 2,
prop_parkarea_inzip >= prop_parkarea_NQs[1] ~ 1
),
pop_density_NQ = case_when(
pop_density_inzip > pop_density_NQs[4] ~ 4,
pop_density_inzip > pop_density_NQs[3] ~ 3,
pop_density_inzip > pop_density_NQs[2] ~ 2,
pop_density_inzip >= pop_density_NQs[1] ~ 1
)
)
# Chunk 9: SubjectData
my_vars <-
init_data %>%
select(prolific_ID, time, homelocation, worklocation) %>%
# add if WfH (1 if subject works from homezip)
left_join(WfH) %>%
# adding home park data
left_join(zip_data, by = c("homelocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome = parks_inzip,
numParksHome_NQ = parks_NQ,
areaParksHome = parkarea_inzip,
areaParksHome_NQ = parkarea_NQ,
propParksHome = prop_parkarea_inzip,
propParksHome_NQ = prop_parkarea_NQ,
popDensityHome = pop_density_inzip,
popDensityHome_NQ = pop_density_NQ
) %>%
# adding work park data
left_join(zip_data, by = c("worklocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome, numParksHome_NQ, areaParksHome, areaParksHome_NQ, propParksHome,
propParksHome_NQ, popDensityHome, popDensityHome_NQ,
numParksWork = parks_inzip,
numParksWork_NQ = parks_NQ,
areaParksWork = parkarea_inzip,
areaParksWork_NQ = parkarea_NQ,
propParksWork = prop_parkarea_inzip,
propParksWork_NQ = prop_parkarea_NQ,
popDensityWork = pop_density_inzip,
popDensityWork_NQ = pop_density_NQ
)
# Chunk 10: SampQuartHome
parks_home_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(numParksHome),
na.rm = TRUE)
parks_home_SQ <- rbind(parks_home_SQ, temp)
}
parkarea_home_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(areaParksHome),
na.rm = TRUE)
parkarea_home_SQ <- rbind(parkarea_home_SQ, temp)
}
prop_parkarea_home_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(propParksHome),
na.rm = TRUE)
prop_parkarea_home_SQ <- rbind(prop_parkarea_home_SQ, temp)
}
pop_density_home_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(popDensityHome),
na.rm = TRUE)
pop_density_home_SQ <- rbind(pop_density_home_SQ, temp)
}
# Chunk 11: assignSQHome
my_vars <- my_vars %>%
mutate(
numParksHome_SQ = NA,
areaParksHome_SQ = NA,
propParksHome_SQ = NA,
popDensityHome_SQ = NA)
for (i in 1:dim(my_vars)[1]){
for (x in 1:3){
if (is.na(my_vars$numParksHome[i])) {
my_vars$numParksHome_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$numParksHome[i] > parks_home_SQ[x,4]) {
my_vars$numParksHome_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$numParksHome[i] > parks_home_SQ[x,3]) {
my_vars$numParksHome_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$numParksHome[i] > parks_home_SQ[x,2]) {
my_vars$numParksHome_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$numParksHome[i] >= parks_home_SQ[x,1]) {
my_vars$numParksHome_SQ[i] <- 1
}
if (is.na(my_vars$areaParksHome[i])) {
my_vars$areaParksHome_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$areaParksHome[i] > parkarea_home_SQ[x,4]) {
my_vars$areaParksHome_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$areaParksHome[i] > parkarea_home_SQ[x,3]) {
my_vars$areaParksHome_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$areaParksHome[i] > parkarea_home_SQ[x,2]) {
my_vars$areaParksHome_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$areaParksHome[i] >= parkarea_home_SQ[x,1]) {
my_vars$areaParksHome_SQ[i] <- 1
}
if (is.na(my_vars$propParksHome[i])) {
my_vars$propParksHome_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$propParksHome[i] > prop_parkarea_home_SQ[x,4]) {
my_vars$propParksHome_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$propParksHome[i] > prop_parkarea_home_SQ[x,3]) {
my_vars$propParksHome_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$propParksHome[i] > prop_parkarea_home_SQ[x,2]) {
my_vars$propParksHome_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$propParksHome[i] >= prop_parkarea_home_SQ[x,1]){
my_vars$propParksHome_SQ[i] <- 1
}
if (is.na(my_vars$popDensityHome[i])) {
my_vars$popDensityHome_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$popDensityHome[i] > pop_density_home_SQ[x,4]) {
my_vars$popDensityHome_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$popDensityHome[i] > pop_density_home_SQ[x,3]) {
my_vars$popDensityHome_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$popDensityHome[i] > pop_density_home_SQ[x,2]) {
my_vars$popDensityHome_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$popDensityHome[i] >= pop_density_home_SQ[x,1]){
my_vars$popDensityHome_SQ[i] <- 1
}
}
}
# Chunk 12: SampQuartWork
parks_work_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(numParksWork),
na.rm = TRUE)
parks_work_SQ <- rbind(parks_work_SQ, temp)
}
parkarea_work_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(areaParksWork),
na.rm = TRUE)
parkarea_work_SQ <- rbind(parkarea_work_SQ, temp)
}
prop_parkarea_work_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(propParksWork),
na.rm = TRUE)
prop_parkarea_work_SQ <- rbind(prop_parkarea_work_SQ, temp)
}
pop_density_work_SQ <- NULL
for (x in 1:3) {
temp <- quantile(
my_vars%>%
filter(time == x, na.rm = TRUE)%>%
select(popDensityWork),
na.rm = TRUE)
pop_density_work_SQ <- rbind(pop_density_work_SQ, temp)
}
# Chunk 13: assignSQWork
my_vars <- my_vars %>%
mutate(
numParksWork_SQ = NA,
areaParksWork_SQ = NA,
propParksWork_SQ = NA,
popDensityWork_SQ = NA)
for (i in 1:dim(my_vars)[1]){
for (x in 1:3){
if (is.na(my_vars$numParksWork[i])) {
my_vars$numParksWork_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$numParksWork[i] > parks_work_SQ[x,4]) {
my_vars$numParksWork_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$numParksWork[i] > parks_work_SQ[x,3]) {
my_vars$numParksWork_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$numParksWork[i] > parks_work_SQ[x,2]) {
my_vars$numParksWork_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$numParksWork[i] >= parks_work_SQ[x,1]) {
my_vars$numParksWork_SQ[i] <- 1
}
if (is.na(my_vars$areaParksWork[i])) {
my_vars$areaParksWork_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$areaParksWork[i] > parkarea_work_SQ[x,4]) {
my_vars$areaParksWork_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$areaParksWork[i] > parkarea_work_SQ[x,3]) {
my_vars$areaParksWork_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$areaParksWork[i] > parkarea_work_SQ[x,2]) {
my_vars$areaParksWork_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$areaParksWork[i] >= parkarea_work_SQ[x,1]) {
my_vars$areaParksWork_SQ[i] <- 1
}
if (is.na(my_vars$propParksWork[i])) {
my_vars$propParksWork_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$propParksWork[i] > prop_parkarea_work_SQ[x,4]) {
my_vars$propParksWork_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$propParksWork[i] > prop_parkarea_work_SQ[x,3]) {
my_vars$propParksWork_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$propParksWork[i] > prop_parkarea_work_SQ[x,2]) {
my_vars$propParksWork_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$propParksWork[i] >= prop_parkarea_work_SQ[x,1]){
my_vars$propParksWork_SQ[i] <- 1
}
if (is.na(my_vars$popDensityWork[i])) {
my_vars$popDensityWork_SQ[i] <- NA
}
else if (my_vars$time[i] == x && my_vars$popDensityWork[i] > pop_density_work_SQ[x,4]) {
my_vars$popDensityWork_SQ[i] <- 4
}
else if (my_vars$time[i] == x && my_vars$popDensityWork[i] > pop_density_work_SQ[x,3]) {
my_vars$popDensityWork_SQ[i] <- 3
}
else if (my_vars$time[i] == x && my_vars$popDensityWork[i] > pop_density_work_SQ[x,2]) {
my_vars$popDensityWork_SQ[i] <- 2
}
else if (my_vars$time[i] == x && my_vars$popDensityWork[i] >= pop_density_work_SQ[x,1]){
my_vars$popDensityWork_SQ[i] <- 1
}
}
}
# Chunk 14: reorderVars
col_order <- c("prolific_ID","time","homelocation","worklocation","WfH_2D",
"numParksHome","numParksHome_NQ","numParksHome_SQ",
"areaParksHome","areaParksHome_NQ","areaParksHome_SQ",
"propParksHome","propParksHome_NQ","propParksHome_SQ",
"popDensityHome","popDensityHome_NQ","popDensityHome_SQ",
"numParksWork","numParksWork_NQ","numParksWork_SQ",
"areaParksWork","areaParksWork_NQ","areaParksWork_SQ",
"propParksWork","propParksWork_NQ","propParksWork_SQ",
"popDensityWork","popDensityWork_NQ","popDensityWork_SQ")
my_vars <- myvars[, col_order]
my_vars <- my_vars[, col_order]
View(parks_home_SQ)
View(init_data)
# Chunk 1: setup
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
# Chunk 2: libraries
library(tidyverse)
# Chunk 3: LoadData
tracts_nature <- read_csv("data/nanda_parks_tract_2018_01P.csv")
tracts_to_zip <- read_csv("data/zcta_tract_rel_10.csv")
zips_of_interest <- read_csv("data/NaturalElementsSpatialAnalysis - ZipCodes - renamed.csv")
init_data <- read_csv("data/NaturalElementsDataFinal - DatasetALLtimes.csv")
pop_data <- read_csv("data/DECENNIALPL2020.P1_data_with_overlays_2021-11-04T122132.csv")
# Chunk 4: workFromHome
WfH <- zips_of_interest %>%
mutate(
WfH_2D = case_when(
Home_Location_2D == Work_Location_2D ~ 1,
TRUE ~ 0
)
) %>%
select(prolific_ID,WfH_2D)
# Chunk 5: PopulationData
pop_data_2020 <- pop_data[-1,] %>%
select(GEO_ID, P1_001N) %>%
separate(
GEO_ID,
into = c(NA, "GEOID"),
sep = "US"
) %>%
mutate(GEOID = as.numeric(GEOID))
# Chunk 6: ManipulateParkData
tracts_avg <-
tracts_nature %>%
mutate(GEOID = as.numeric(tract_fips10)) %>%
left_join(pop_data_2020) %>%
mutate(
parks_per_area = count_open_parks / tract_area,
pop_per_area = as.numeric(P1_001N) / tract_area
) %>%
select(GEOID, parks_per_area, prop_park_area_tract, pop_per_area)
# Chunk 7: ZipData
zip_data <-
tracts_to_zip %>%
select(ZipCode = ZCTA5, GEOID, ZAREA, ZAREAPCT) %>%
left_join(tracts_avg) %>%
mutate(
tractparks_inzip = parks_per_area * ZAREA * ZAREAPCT/100,
tractparkarea_inzip = prop_park_area_tract * ZAREA * ZAREAPCT/100,
tractpop_inzip = pop_per_area * ZAREA * ZAREAPCT/100
) %>%
group_by(ZipCode) %>%
summarize(
parks_inzip = sum(tractparks_inzip, na.rm = T),
parkarea_inzip = sum(tractparkarea_inzip, na.rm = T),
pop_inzip = sum(tractpop_inzip, na.rm = T),
ZAREA = ZAREA
) %>%
mutate(
prop_parkarea_inzip = parkarea_inzip / ZAREA,
pop_density_inzip = pop_inzip / ZAREA
) %>%
unique()
# Chunk 8: NationQuartile
parks_NQs <- quantile(zip_data$parks_inzip)
parkarea_NQs <- quantile(zip_data$parkarea_inzip)
prop_parkarea_NQs <- quantile(zip_data$prop_parkarea_inzip)
pop_density_NQs <- quantile(zip_data$pop_density_inzip)
zip_data <- zip_data %>%
mutate(
parks_NQ = case_when(
parks_inzip > parks_NQs[4] ~ 4,
parks_inzip > parks_NQs[3] ~ 3,
parks_inzip > parks_NQs[2] ~ 2,
parks_inzip >= parks_NQs[1] ~ 1
),
parkarea_NQ = case_when(
parkarea_inzip > parkarea_NQs[4] ~ 4,
parkarea_inzip > parkarea_NQs[3] ~ 3,
parkarea_inzip > parkarea_NQs[2] ~ 2,
parkarea_inzip >= parkarea_NQs[1] ~ 1
),
prop_parkarea_NQ = case_when(
prop_parkarea_inzip > prop_parkarea_NQs[4] ~ 4,
prop_parkarea_inzip > prop_parkarea_NQs[3] ~ 3,
prop_parkarea_inzip > prop_parkarea_NQs[2] ~ 2,
prop_parkarea_inzip >= prop_parkarea_NQs[1] ~ 1
),
pop_density_NQ = case_when(
pop_density_inzip > pop_density_NQs[4] ~ 4,
pop_density_inzip > pop_density_NQs[3] ~ 3,
pop_density_inzip > pop_density_NQs[2] ~ 2,
pop_density_inzip >= pop_density_NQs[1] ~ 1
)
)
my_vars <-
init_data %>%
select(prolific_ID, time, homelocation, worklocation) %>%
# add if WfH (1 if subject works from homezip)
left_join(WfH) %>%
# adding home park data
left_join(zip_data, by = c("homelocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome = parks_inzip,
numParksHome_NQ = parks_NQ,
areaParksHome = parkarea_inzip,
areaParksHome_NQ = parkarea_NQ,
propParksHome = prop_parkarea_inzip,
propParksHome_NQ = prop_parkarea_NQ,
popDensityHome = pop_density_inzip,
popDensityHome_NQ = pop_density_NQ
) %>%
# adding work park data
left_join(zip_data, by = c("worklocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome, numParksHome_NQ, areaParksHome, areaParksHome_NQ, propParksHome,
propParksHome_NQ, popDensityHome, popDensityHome_NQ,
numParksWork = parks_inzip,
numParksWork_NQ = parks_NQ,
areaParksWork = parkarea_inzip,
areaParksWork_NQ = parkarea_NQ,
propParksWork = prop_parkarea_inzip,
propParksWork_NQ = prop_parkarea_NQ,
popDensityWork = pop_density_inzip,
popDensityWork_NQ = pop_density_NQ
)
data_save = left_join(init_data,my_vars)
write_CSV(data_save,file="NaturalElementsDataFinal - withParkInfo.csv")
my_vars <-
init_data %>%
select(prolific_ID, time, homelocation, worklocation) %>%
# add if WfH (1 if subject works from homezip)
left_join(WfH) %>%
# adding home park data
left_join(zip_data, by = c("homelocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome = parks_inzip,
numParksHome_NQ = parks_NQ,
areaParksHome = parkarea_inzip,
areaParksHome_NQ = parkarea_NQ,
propParksHome = prop_parkarea_inzip,
propParksHome_NQ = prop_parkarea_NQ,
popDensityHome = pop_density_inzip,
popDensityHome_NQ = pop_density_NQ
) %>%
# adding work park data
left_join(zip_data, by = c("worklocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome, numParksHome_NQ, areaParksHome, areaParksHome_NQ, propParksHome,
propParksHome_NQ, popDensityHome, popDensityHome_NQ,
numParksWork = parks_inzip,
numParksWork_NQ = parks_NQ,
areaParksWork = parkarea_inzip,
areaParksWork_NQ = parkarea_NQ,
propParksWork = prop_parkarea_inzip,
propParksWork_NQ = prop_parkarea_NQ,
popDensityWork = pop_density_inzip,
popDensityWork_NQ = pop_density_NQ
)
data_save = left_join(init_data,my_vars)
write.CSV(data_save,file="NaturalElementsDataFinal - withParkInfo.csv")
my_vars <-
init_data %>%
select(prolific_ID, time, homelocation, worklocation) %>%
# add if WfH (1 if subject works from homezip)
left_join(WfH) %>%
# adding home park data
left_join(zip_data, by = c("homelocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome = parks_inzip,
numParksHome_NQ = parks_NQ,
areaParksHome = parkarea_inzip,
areaParksHome_NQ = parkarea_NQ,
propParksHome = prop_parkarea_inzip,
propParksHome_NQ = prop_parkarea_NQ,
popDensityHome = pop_density_inzip,
popDensityHome_NQ = pop_density_NQ
) %>%
# adding work park data
left_join(zip_data, by = c("worklocation"="ZipCode")) %>%
select(
prolific_ID, time, homelocation, worklocation, WfH_2D,
numParksHome, numParksHome_NQ, areaParksHome, areaParksHome_NQ, propParksHome,
propParksHome_NQ, popDensityHome, popDensityHome_NQ,
numParksWork = parks_inzip,
numParksWork_NQ = parks_NQ,
areaParksWork = parkarea_inzip,
areaParksWork_NQ = parkarea_NQ,
propParksWork = prop_parkarea_inzip,
propParksWork_NQ = prop_parkarea_NQ,
popDensityWork = pop_density_inzip,
popDensityWork_NQ = pop_density_NQ
)
data_save = left_join(init_data,my_vars)
write_csv(data_save,file="NaturalElementsDataFinal - withParkInfo.csv")
View(data_save)
View(data_save)
