1+1
```{r cars}
summary(cars)
```
'''1+1'''
## Including Plots
```{r cars}
summary(cars)
```
1+1
## Including Plots
```{r cars}
summary(cars)
```
temp <- 1+1
## Including Plots
```{r cars}
{r cars}
summary(cars)
## Including Plots
library(tidyverse)
library(tigris)
library(stringr)
Sys.setenv(CENSUS_KEY="dbcdeeed2f9e907f31811ee78c1f239a2aa77934")
# loading data from saved "data" folder (in github folder)
lat_longs_full <- read_csv("data/NaturalElementsSpatialAnalysis - EditedLatLong2Surveys.csv")
park_tracts <- read_csv("data/nanda_parks_tract_2018_01P.csv")
pop_data <- read_csv("data/DECENNIALPL2020.P1_data_with_overlays_2021-11-04T122132.csv")
init_data <- read_csv("data/NaturalElementsDataFinal - DatasetALLtimes.csv")
fips_convert <- read_csv("data/FIPS_Convert.csv") #from https://www.nrcs.usda.gov/wps/portal/nrcs/detail/national/home/?cid=nrcs143_013697
setwd("~/Documents/GitHub/Fall_2021_Research_GSandMH")
# loading data from saved "data" folder (in github folder)
lat_longs_full <- read_csv("data/NaturalElementsSpatialAnalysis - EditedLatLong2Surveys.csv")
park_tracts <- read_csv("data/nanda_parks_tract_2018_01P.csv")
pop_data <- read_csv("data/DECENNIALPL2020.P1_data_with_overlays_2021-11-04T122132.csv")
init_data <- read_csv("data/NaturalElementsDataFinal - DatasetALLtimes.csv")
fips_convert <- read_csv("data/FIPS_Convert.csv") #from https://www.nrcs.usda.gov/wps/portal/nrcs/detail/national/home/?cid=nrcs143_013697
colnames(lat_longs_full) <- c("StartDate", "EndDate", "ResponseID", "prolific_ID",
"lat", "lon", "time", "state", "county", "tract")
lat_longs <- filter(lat_longs_full, !is.na(lat)) #removing entries without latlong
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], vintage = 2010)
print(i)
}
write_csv(lat_longs, "data/LatLon_to_Tract_GEOIDinCounty.csv")
geoid <- lat_longs
geoid <- filter(geoid_full, !is.na(county))
#geoid_full <- read_csv("data/LatLon_to_Tract_GEOIDinCounty.csv")
#geoid <- filter(geoid_full, !is.na(county)) #removing entereis that had lat longs not in US census block
colnames(lat_longs_full) <- c("StartDate", "EndDate", "ResponseID", "prolific_ID",
"lat", "lon", "time", "state", "county", "tract")
lat_longs <- filter(lat_longs_full, !is.na(lat)) #removing entries without latlong
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], vintage = 2010)
print(i)
}
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], vintage = 2010)
print(i)
}
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], benchmark = 2020,  vintage = 2010)
print(i)
}
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], benchmark = 2010,  vintage = 2010)
print(i)
}
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], benchmark = 2010,  vintage = 2010)
print(i)
}
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], benchmark = 2020,  vintage = 2010)
print(i)
}
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,9] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i], benchmark = 2010,  vintage = 2010)
print(i)
}
colnames(lat_longs_full) <- c("StartDate", "EndDate", "ResponseID", "prolific_ID",
"lat", "lon", "time", "state", "county", "tract")
lat_longs <- filter(lat_longs_full, !is.na(lat)) %>% #removing entries without latlong
mutate(GEOID = NA)
View(lat_longs)
colnames(lat_longs_full) <- c("StartDate", "EndDate", "ResponseID", "prolific_ID",
"lat", "lon", "time", "state", "county", "tract")
lat_longs <- filter(lat_longs_full, !is.na(lat)) %>% #removing entries without latlong
mutate(GEOID = NA)
for (i in 1:dim(lat_longs)[1]) {
lat_longs[i,11] <- call_geolocator_latlon(lat = lat_longs$lat[i], lon = lat_longs$lon[i])
print(i)
}
write_csv(lat_longs, "data/LatLon_to_Tract_GEOIDinCounty.csv")
geoid <- lat_longs
geoid <- filter(geoid_full, !is.na(county))
geoid_full <- lat_longs
geoid <- filter(geoid_full, !is.na(GEOID))
lat_longs_tract <- geoid[,1:7] %>%
transmute(
prolific_ID = prolific_ID,
time = time,
tract = NA,
CountyCode = NA
)
for (i in 1:dim(lat_longs_tract)[1]){
lat_longs_tract$tract[i] <- str_sub(geoid$GEOID[i],1,11)
lat_longs_tract$CountyCode[i] <- as.numeric(str_sub(geoid$GEOID[i],1,5))
}
View(lat_longs_tract)
